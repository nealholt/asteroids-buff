** [#A] git commands
git pull
git add . && git commit -m "" && git push
** [#A] to run on mac
It runs with the following command on my mac:
python2.7-32 playGame.py
The bad news is that it is slow as fuck.
It seems to be faster when using -flip.
** separate turnTowards functionality
PhysicalObject's turnTowards seems to be doing too much work. It also does this obstacle avoidance. Shouldn't that be separate?

Instead of turnTowards, write a method that returns recommended turning angle to target and recommended speed.

Write a collision avoidance method that also returns recommended turning angle and speed, or None, in which case no change is mandated by collision avoidance.

phys obj
player
ship
objInstances

turnTowards
** npc behavior modifications. set up for personality
1. figure out where to put each of these in the "personality file". I think a todo on this list is fine.
2. For each one, see if we want to fix it in any way and do so in the code. This may trigger the creation of a whole new project and that's ok.

physicalObject.getRecommendedVector has magic numbers and other ugliness that you want to get rid of.

Make some of the parameters more meaningful:

Ratio of distance to closest sprite over abs(angle to closest sprite) that corresponds to how self's speed should be set, assuming the ratio is less than one.
Max angle at which we even pay attention to such a sprite is 90 degrees.
100/20 degrees seems like a good threshold ratio.
So how about when distance/(abs(angle)*3) is less than one, then our target speed should be no more than this ratio of our maximum speed.
So in this case, 3 is the parameter. However, in reality, this depends on our acceleration and the object's size, but this will suffice for now.

   angle from an enemy to self below which an npc will panic and temporarily flee.
Default +- 20 degrees.
Was self.target_front_center
rename to self.in_crosshairs

   health fraction below which an npc will permanently flee.
Default 10%
Was and is self.min_percent_health. Don't change, just comment.

   What the npc considers optimal distance to target.
Previously there are 3 different values 
self.target_long_range
Any range over this and the npc just wants to get to target as fast as possible.
Below this range, slow to 1/2 max speed.
self.target_med_range
Below this range, slow to max turn speed.
self.target_short_range
Below this range, slow to a stop.

   What ratio of distance to target over abs(angle to target) the npc considers acceptable before the npc needs to reduce speed to improve turning. Put bounds on this ratio as a start.
Cap the distance at one screen width.
900/90 or greater = 10/1 = need to turn.
Set the default ratio as anything over 10/1
This is not currently implemented as a variable, but is roughly encoded in the goto method. Put it in a variable called:
self.distance_angle_ratio = 10.0

		#Angle within which npc should consider avoiding an object. If the 
		#object is within + or - 90 degrees, for instance, then self will test 
		#to see if the object is close enough to initiate an avoidance behavior.
		#Only self.closest_sprite is evaluated for the danger cone.
		self.danger_cone = 90

#File all of this in one place with NPC personalities in this document for future use.
		#If the distance between this object and self.closest_sprite is less than this 
		#number of pixels, then self will turn away.
		self.avoidance_threshold = 20

		#If the distance between this object and another is less than this 
		#number of pixels, then this object will not turn in the direction of 
		#the object even if this object's target is in that direction.
		self.suppress_turn_threshold = 40

#The following are not well implemented. They are far too small, only triggered if distance is already less than self.avoidance_threshold, and do not take into account angle to the closest object. Change them.
		#Set the recommended ship speed to 1/4 max speed if self.closest_sprite is on 
		#a collision course with us and is danger_red_distance distance away, 
		#1/2 max speed if yellow and otherwise 3/4 max speed.
		self.danger_red_distance = 10
		self.danger_yellow_distance = 20
** npc behavior: fly by combat
have enemy ships tend to shoot and fly past enemies rather than park in front of them continually unloading bullets until one dies.

If npc is close to played and player's angle to the enemy ship is low then initiate a fly by. That is. Accelerate and turn away from player.

The goTo methods else ifs may be fairly easy to improve, I think. Can't they be made more efficient? Can they be improved?
** Pygame for development
Separate the following notes into
1. motivation
2. graphics libraries that interact with python that you want to look into.
3. notes on how to compile python to an executable

http://www.reddit.com/r/gamedev/comments/16d5ak/is_pygame_or_any_other_python_gamedev_library/
My last pygame product made $30,000 last year. That was it's third year of being on sale.
"You're right. I could have, but I'm most comfortable with Python. Pygame is wonderfully cross-platform across PC-Mac-Linux, soon Android. I code on a Mac, literally drag and drop sources into Windows or Linux and the game works. Period.
You might be able to guess that I'm a no-fucking-hassle kind of guy. :-)"

http://www.reddit.com/r/gamedev/comments/i2ixn/publishing_a_pygame_game/
"Yes - and I've shipped a project with py2exe."
"Check out PyInstaller which offers a wide variety of ways to package your project up for easy distribution."

Graphics libraries for python:
http://cocos2d.org/doc.html - checking out the video here is probably useful.
http://www.panda3d.org/
** a lived in world - npc traders
NPC's randomly pick pairs of semi-close nodes.
Then they pick a planet at each node.
The NPC then buys goods at one end and sells them at the other end.
Once the route is not profitable, or drops below a threshold, then the NPC randomly picks a new route.
Buying makes prices go up and selling makes them go down.
Prices are periodically randomly reinitialized.

You could have NPC traders and NPC pirates that hunt them. This could make the speech bubbles meaningful.

I love this idea. If I then add shipyards for buying upgrades and repairs then I'm on my way toward a lived-in world with great opportunity for exploration.
Also this: Long distances between nodes. Make the fuel constraint more of a constraint.
Trade routes to discover.
NPCs can also upgrade when they make enough money.
Player could rescue escape capsules or prey on traders or charge a fee to escort traders.
Cargo could spin out of destroyed ships.
Tractor beam could slow down stuff that pops out of destroyed ships.
You could cap the tech level that is allowed to be used at some nodes so that player can choose how to scale things up and you can make the game more game like without sacrificing freedom.
When an NPC or pirate dies then they can reset to the low level nodes.
Conflict between NPCs and pirates that takes place offscreen can be calculated relatively easily with tech level giving probability advantages to one or the other. Also you could code it up so that the NPCs escape battles and go lick their wounds. This can be added to the "lived in" nature of the universe.

DISCOVERY: The player could be forced to discover ALL objects in the game. Player could follow NPC ships to learn the locations of new objects.
If the player's ship drifts too far from a node center then search and rescue ships can spawn to guide the player back.
** STEP ONE: soul searching
What do you want out of this game?
What is the best thing you can do to move the game towards what you want? Do I need to look at the graphics library first? Get the code to compile on other machines?
** what is the game you want?
I like the idea of contextualizing actions and events that are large and multistep, but not opaque.

Ask yourself what games you like and what you like about them.
  Urban Dead
  Privateer 2
  Freelancer mods
  Nexus Wars
  Starcraft
  Romance of the Three Kingdoms
  Ogame - good for the scaling!

Your goal is to create a game you enjoy that others will also enjoy.
Worry about making money off a game later. What could that game be like? A rogue-like with moving tiles and mazes?

There are other ways to make this simple and game like, but I love the open world idea.
Why do I love the open world idea? Because exploration and learning excite me. This means I should have things to learn and discover out there. Perhaps procedural stories are this.
** Little fun changes and additions
Stealth 
Sensors - detect enemies before they detect you. 
Sensor range. Enemies don't know where you are automatically from a million miles away. 
A League of Legends-like minigame. 
Or a Nexus Wars-type minigame. 

Weapon resistances and special "elements".
Shield items?

Turn off friendly fire?

Better scaling up of the classes?

Stationary defenses.

Kamikaze enemies.

Ship that can only be destroyed by bouncing asteroids into it.

Missiles and bullets that affect trajectory (add in a bit more ballistics).

Special ships that you can't kill. Only have to run from. Dangerous bounty hunters.

What more interesting interactions can you create using existing building blocks?

Temporary speed boost, turn rate boost, no clip, invulnerability, spray bullets in all directions.
** missile more updates
See missile.initialize for a lot of new missile attributes that can be added in. You will also need to modify class Missile in objInstances.py

Keep a limited number of missiles on the player's ship and display this number in profile menu. ... or you could just limit missiles based on the refire rate.
** lasers, kinetics, ions
Implement lasers, kinetics, and ion as parameterization of the existing items. First make them just based on color. Then add their other traits.

lasers - red. fast fire, low damage, does not interact with other lasers, is destroyed by contact with kinetics

kinetic - green. lower velocity unless boosted, velocity = firer's velocity + amount, reduces firer's velocity, is destroyed by contact with other kinetics but not lasers.

ion - blue. very slow. disables target movement and causes slow rotation for a brief period of time. causes no damage.
** new NPC behaviors
*** escort and protect a target
NPCs won't attack until you get within range.

Then add a mission where you take down a convoy before it reaches its destination
*** defend area of space
Should be easy once you get the previous behavior
** parameterize minigame difficulty
Asteroids: Difficulty can scale up by increasing number of rocks, shrinking volume of space (inner concentric circle), speeding up rocks, increasing the number of rocks created when one gets destroyed.

Gem wild: This game can easily be made more difficult by adding asteroids (that the gems might or might not collide with), adding enemies (that either fight the player or also try to get gems, or adding solar storms.

Race could be made more difficult with more enemies, less time, or a solar storm. Really it's just a lone time trial right now. You could make it a race. You could add booster pickups along the way.
** add more factions
Change faction names to these and add a couple flags:
Democratic Hive Mind
Cephalopod Confederacy
Society of Invertebrate Mutualists
United Inorganic Life Forms
Incorporated Mammalian Clans

Set one of these to not start at a random location, but to start at the player's location with high alliance with the player.
** fleet and shipyard objects
Make a ship yard object:
  stored at a node, the shipyard produces either little ships or capital ships of a particular tech level (class).

Make a fleet object:
  Fleet stores numbers of ships and capital ships of each class, owning faction, destination node to conquer for the faction.
  Fleets move and update independently each turn.

Then give player more options for interacting with fleets. Try to make these organic. For example, killing ships at the node (make sure the ships are killed by player bullets, not accidental collisions) reduces faction's strength and the player's reputation with that faction, but increases player's reputation with opposing factions. Destroying tiny asteroids clears up the node and increases reputation with the owning faction. Destroying big asteroids that become small asteroids has the opposite effect. Harvesting gems decreases profitability, but releasing gems by shooting gem asteroids has the opposite effect. Player could get a summary of the effects of their actions at each waypoint.

(Some factions might have more profitability from more debris-strewn nodes.)
** better interaction with factions
List phases then break them down into simple behaviors that can be implemented piecemeal.
*** Phases
**** Wealth increase phase
Increase wealth until a trigger causes a transition.
Wealth is a function that can be different for each faction but is initially minimal asteroids and maximization of the wealth parameter at a node.

Choose an owned node.
Increase wealth of chosen node.
Evaluate transition to new state based on triggers.
**** Tech increase phase
Increase the tech of the faction.
Tech goes up by fractions but is calculated as an integer so it can't be advanced in one turn.

Select a tech.
Increase the tech.
Evaluate transition to new state based on triggers.
**** Ship increase phase
Choose an owned node.
Select a tech.
Increase the production of the corresponding tech item at its current class in the chosen node.
Evaluate transition to new state based on triggers.
**** build up to war
choose a node on your border that you wish to conquer
choose an owned node bordering the node to conquer
choose owned nodes border the owned node next to the node to conquer and move ships from these nodes to that node.
Evaluate transition to new state based on triggers.
**** War / conquering phase
Select a border node to conquer.
Select a node bordering the border node. Preferrably the one with the most forces.
Calculate results of attack from owned node to goal node.
Evaluate transition to new state based on triggers.
**** specific node defense
Choose an owned node, probably one that has been suffering attacks.
Move ships from nodes bordering the attacked node to this node.
Evaluate transition to new state based on triggers.
**** Consolidation / border defense
Choose an owned node with preference for border nodes and nodes with low numbers of ships.
Select an adjacent node and even out the number of ships by moving them between the nodes.
Evaluate transition to new state based on triggers.
*** all else
Diagram the control flow and state.



default_phase_length = 50 #Number of turns
#Personality traits of factions influence durations of phases
#and influences the triggers for transitions to other phases.
aggression = 1.2 #war and ship building duration multiplier
patience = 1.5 #wealth and tech development duration multiplier
bloody_mindedness = 1 #Number of attacks tolerated before switching to war


Behaviors:
  conquering a particular node
  defending a particular node
  border defense in general

Make it so you can trigger node updates for debugging without traveling to a new node.




It's time to have smarter faction actions.

Wealth - Debris => Income
Income => More actions
Production => More ships
Tech => Better ships
Ships => Offense and Defence

Phases (in order):
  Wealth increase phase
  Tech increase phase
  Ship increase phase
  War / conquering phase
  Ship increase phase (consolidation)
Then repeat

Time length of phase as one variable

Initially non-responsive behaviors

The following goals determine when a phase ends. Basically this is where we can adjust faction personalities but also have them dynamically respond to events such as an aggressor:
Goal for war phase: conquer x nodes owned by n or lose y ships or z time elapses, whichever comes first.
Goal for tech phase: increase x tech by y levels or lose z nodes or n time elapses, whichever comes first.
Goal for wealth phase: all non-border nodes gain x wealth per turn or lose z nodes or n time elapses, whichever comes first.
Goal for ship increase phase: all border nodes build x ships per turn or lose z nodes or n time elapses, whichever comes first.

Defense phase of ship building on a border with node that was lost for x amount of time. This can be re-triggered by an attack or the loss of another node.

Ship building at a particular node that was attacked.

Factions need to store which nodes were attacked.

Faction resources:
  money
  turns
  nodes
  production at nodes
  tech



Next go here:
FactionManager
getFactionActions

Modify faction action options so they randomly select from among the following to do:
  DONE increase owned node wealth - increases future income
  increased owned node production - increase units produced here
  increased owned node tech - increases quality of units produced here
  decreased owned node asteroids - enables increase of local wealth, otherwise can't increase local wealth
  decreased enemy node strength - delete units of equal class in equal amounts with the enemy at neighboring nodes
  decreased enemy node tech - just what it sounds like. happens for free, costs a turn
  conquer neighbour node - enemy must have no units at that node for this to be possible.

production+-
tech+-
debris+-
wealth+-
capture
attack



When a faction conquers a neighbor node, production and tech should be set to zero.

These just happen once per turn (per player warp), randomly for now.

Remove the test panel from displaying as default. We now have the minigames panel instead.

make a little newspaper for the player with headlines saying what a sampling of the factions are doing. This will be used for testing for now. Just make it another standard panel in the standard menu.
Just say what event happened and where.

Adda a ship attribute to make ships affiliate with a faction or with None.

It would be great to have a raw count of the number of ships of each class (and capital ships too) owned by each faction so that every kill the player makes can be meaningful.
Do this.

Faction strength can be decreased by killing the faction's ships at the node so don't make that a consequence of the minigames.

Only have faction ships attack player if faction dislikes player and faction has ships available at the given node.
Have unaffiliated pirate ships attack player randomly. These can be scaled to get stronger further from the player's starting location and also have a random number of them spawn.

Remove node hostility as a node attribute and make the same parameter depend on the faction's relationship with the player instead. Unless we want node hostility to be probability of spawning pirates. In that case, keep it as is.

At every turn, units and wealth are produced at every node each faction owns

Wait, what will factions spend money on? For now, let them buy extra turns to take.

PROBABLY PUT OFF THE REST OF THESE UNTIL LATER:

I love the idea of factions being identifiable by their weapons. Maybe they should not have random classes, or they can have semi random classes, but certain values are always fixed. Some factions emphasize missiles. Some emphasize fast little ships, etc.

Later make the actions more intelligent (like have each faction focus in one area for a longer amount of time).

Factions may need to store relationships with each other. Later they can negotiate treaties and such and have more sophisticated interactions.
** pygame executable
See the readme in the compiling folder for next steps.
** save and load from save with pickle
Is this really that hard? maybe you should try it. It could help with bebugging and testing.


implementing save and load next could be really helpful for debugging.
First add a menu to save, save and quit, or load from save.

Make a start menu with a starscape and text options to:
load game from save (does nothing).
Start a new game.
View the help menu.

Have a help menu that goes back to the starscape intro menu when you click away from it.
** pygame
Story teller should come after save game, should come after executables for other people should come after most objects are finalized.

So do things like:
  new enemy behaviors
  fleet objects
  fancier missiles
  efficiency stuff with respect to display flip (maybe profile everything again afterward)
  faction interactions
** I think the game needs a goal right away
Along the way for this you will likely implement a fleet object and NPC escort behaviors. A fleet object is a group of ships and their armaments that travels together and can pass through warps.



Create a story teller object and put it in intangibles. It updates once every second and checks to see if the player accomplished the most recent quest. Have it pop up immediately to tell the player this:

Humanity has taken giant leaps beyond the home solar system. As a pilot for the United Earth Navy, it's your responsibility to take care of all the small steps that go into those giant leaps. Today begins like most of your days, a simple patrol of the borders of human space. Follow the markers along your patrol path.

(give the player a ship that is decently strong and faster than the aliens at least)

Then show a set of 3 markers.

At the third, a menu pops up saying that you are picking up a distress call. You don't have any weapons, but you will do help.

Arrow then leads to the beacon where you find hostile forces.

Pop up menu saying that these are alien forces never seen before. You must warn headquarters. Follow the arrow to headquarters.

When you get to headquarters, you are outfitted with a gun and told that the aliens are attacking and you must defend the station.

Kill off the enemies to get to the next mission marker.

Headquarters is safe for now, but someone must warn Earth. We will give you the honor.

Then waypoints are set to a warp and then through it to a planet on the other side. You are outfitted with a mine layer to help evade pursuit.

Alien ships chase you to the warp.

Once you get through the warp, a marker is set to Earth.

Get to Earth and the mission briefing says:

This is frightening news. We will need resources to combat this threat. Buy X of Y and bring them back to Earth.

After that, create a fleet and escort it to the warp point.

On the other side, engage in a big fleet battle.

Upon victory the navy commends you for your effort and dismisses you. You are forced to buy a weak ship but you are free to explore and use the ship as you wish.

That's all for now. Later you can make this an ongoing long faction battle.




Implement triggers that display new objectives and tell story?
Have an object that keeps track of story state and determines when the next story element is unlocked?
Story object could check game state periodically to see if story is being fulfilled.

just something simple to introduce the mechanics.
Fly to X.
Then get some equipment.
Then kill Y.
Then buy goods and take them to Z.

Just something simple to introduce the game and give direction.
** stuff
Special weapons that only damage asteroids.
Factions that make all lethal weaponry illegal and hunt down criminals.
NPCs that are not hostile to the player, but that instead transport goods or do other tasks like go mine asteroids.
A mini map to view the local area without looking beyond warp points.
Backstories to spawned enemies, not large stories, just little ones. For example, if you spawn pirates, don't spawn them in isolation (unless there is a reason they are isolated, for example they are fleeing an ambush from police, in which case, spawn the police too and spawn the lone pirate as damaged, panicky and trying to flee. If you spawn a unit, spawn a backstory with it: where did it come from, where is it going? What are the consequences if it reaches its destination? What are the consequences if it doesn't?
Constructed stories from the agents themselves. It's just a desire, pursuit of desire, and success or failure.


Implement NPCs fighting each other!
Implement non-hostile NPCs going about their business.


The money is kind of lame right now because there is very little to spend it on. You can only buy fuel and trade goods.



Distinguish the factions. Some have strict rules about contraband. Others do not. Some pursue wealth in the form of trade goods. Others pursue wealth in the form of natural goods. Others seek rule and military tech. Others seek to return space to its natural state. Others are pirates simply seeking to take advantage of others.
Some could also emphasize missiles while others emphasize weapons.
You could also modify fighter personalities based on the factions.


Gary and Lynn might also be good tech-savvy people to tap as play testers.


the game feels like it is missing life, but this can be added. Sure there is nasty potential for grind currently, but don't worry too much about that. There are easy ways to solve that. For example, the minigames could spawn from the world's interface. Capital ship battles and furballs are already basically integral to the game but you could be challenged to a duel by an NPC. Other NPCs could challenge you to a race. Or you could earn money in a game-show called gem wild.
On the flip side, the modification of node attributes could occur based on how many asteroids you destroy in the game world rather than being extracted as a separate element.
But again, don't worry about this for now, just keeping adding the next best feature and smoothing things out as you go.

Later you can make more realistic economies and interactions between the agents.

For now, just smooth out the game elements, reach out to play testers and artists, and keep incrementally adding elements that you think will make it the most fun.

Set a date in early Feb to contact the UNM GDC. You can always just say you are too busy.
See if you can post your game on the pygame website to get it more press.
Reach out to runner erik to see if he will be a play tester for you.

You could share with Tomio, Lavonna and others after the holidays.

You could get harvesting ships and special resources to harvest from asteroids. You could add a tractor beam.

http://apod.nasa.gov/apod/image/1311/2013-11_C2P_2048px.jpg
** Image list for Marie
** next
I like the idea of lots of new objects:
  pirate base
  repair station
  various tech stations and research labs
  defensive guns
  new guns
  new capital ships
  new powerups
  and much more. Image creation is becoming a constraint!
** Diversify products
You can make planets more frequent by commenting
for _ in xrange(objects[planet]):
in hud_helpers.py

attributes: space in cargo hold, range of prices (profit margin), minimum price.
Low minimum price products can be bought early on by players so they can make a small profit early, but later the player will want to focus on higher profit products.
Worst product: low profit margin, large space in cargo hold, but lowest minimum price!
Slightly better: low profit margin, low space in cargo hold, but slightly higher minimum price.
And on up to the very very high minimum price, low space in cargo hold, high profit products.

color products based on whether or not their price is above or below the mean price so player will know if the product is, in general, a deal or not.
Player may still need to make a choice if the player is running low on fuel to sell a product at a not good price in order to buy fuel.

Have option to buy/sell 1, or max of product

What if we just sell fuel at planets instead of the stupid gas can image?
** Characters
Move between nodes, buy ship. Take missions. Faction affiliation. Friendliness with other characters. Bounty on their heads. Like Romance of the Three Kingdoms.

I think you need to think about your agents again. You can make them better than little number adjustors.
You could have each agent trying to earn money, buy a space station, create an empire, or trying to be a pirate.
Goals could be pretty simple. Build X. Requires Y. Find who has Y. Send cargo ship to where Y is with an escort, bring it back.

This is harder than you are making it sound.

Still, perhaps you could implement little stories at each node and these stories would advance without the player's input, but if the player visited, he would see things happening in context.

You just need each agent to have goals, means to achieving those goals, and obstacles. Can you make such a system simple and generic?
** new ship position
have the back of the ship on the edge of the screen, seeing much more in the forward direction.
This would help a lot. Can I do it?

Keep player ship on the edge of a circle that is as large as possible on the screen. The player's ship will always face into the middle of the screen to see the maximum amount in front of the player.

use SCREENRADIUS in global variables.
** sharing
How are you going to share it with others? Could share with Calder.
Plan to have a release version.
What are the immediate additions the game needs?
Small things with immediate payoff.
** agent behaviors to affect the galaxy
Basic commands:
fleet
  move
  merge
  split
Invest in
  upgrade
  units
  economy
Diplomacy
  cease fire
  declare war
  ally
rock paper scissors weapon systems. Have to commit to one for an extended period of time, but can signal others.
objects to respond to
  enemy army in territory
  enemy army on border
  own army in enemy territory
territory traits
  enemy held territory on my border
  choke point
  wealthy
** agents
Smaller-level agents could also be interesting.

Remember: The point of factions is not to create a risk clone, romance of the 3 kingdoms clone, markov process, or rock paper scissors, the point is to contextualize everything else in the game. 
So first you must determine what the options are (skirmish, capital ship, gem rush, asteroids, race, exploration, or whatever) and then what effect the factions can have on the occurrence of these options.

How to contextualize minigames? Make it impossible to slog at mining them. 
Make them rare and valuable, little presents. 
Encourage exploration. 
Making cost of travel meaningful might be important. 
Cost in both fuel AND time since other agents can act while the player moves.

War-like nations could transition between conquer and consolidate phases where conquering is expansionistic and consolidation involves building up economy and more warships to defend the borders.

Cattan-like world building.
Agents can build one structure at each location. Structures:
	resource mine - randomly generates resources up to a maximum amount.
	shop - Sells fuel and ammo. Stocks a limited amount regenerated each turn.
	research station - randomly generates tech items (like shield boosters) for sale. One can be stocked at a time.
	converter - converts resources for a price and at a loss.
	ship yard - converts resources into ships
Attributes:
	location
	owner
	resources needed to construct
	$ to construct
	stock
** enemy personalities
physicalObject constructor.

		#The following parameters could be tweaked to improve NPC performance, 
		#or they could be customized so that different NPCs could have 
		#different levels of caution.

		#Angle within which npc should consider avoiding an object. If the 
		#object is in a 90 degree wide cone, for instance, then it will test 
		#to see if the object is close enough to initiate an avoidance behavior.
		self.danger_cone = 90

		#If the distance between this object and another is less than this 
		#number of pixels, then this object will turn away.
		self.avoidance_threshold = 20

		#If the distance between this object and another is less than this 
		#number of pixels, then this object will not turn in the direction of 
		#the object even if this object's target is in that direction.
		self.suppress_turn_threshold = 40

		#Set the recommended ship speed to 1/4 max speed if another object is on 
		#a collision course with us and is danger_red_distance distance away, 
		#1/2 max speed if yellow and otherwise 3/4 max speed.
		self.danger_red_distance = 10
		self.danger_yellow_distance = 20
** lingering dirty rect issues
How can I make asteroids and gem wild efficient with this new model? since there is a large object obliterating the background every frame? Should I temporarily use flip?

Explosions were fixed, but the problem was with the fact that Flashes ignore their own rectangle when drawing  themselves which is different from most other objects. Instead, it would be nice to incorporate shape drawing into physical objects so keep things more consistent. The healthbars were smearing for the same reason.
** larger world
Rewards:
  Challenge
  Novelty
  Progress
  Discovery

New:
  Weapons, ships, engines
  Enemies
  minigames
  missions
  stories
  images

Difficulty:
  time/fuel
  maneuvers/skill
  tactics
  strategy

Node attributes of concern to the player:
  profitability
  hostility
  recovery/refuel
  ownership

Interesting specializations. I think this is key!!!
  escort
  transporter
  scout
  patroller
  warship
    fighter
    bomber
    capital ship
    etc
  Asteroid clearer
  Explorer
  Raider/harasser/pirate
  racer/messenger
Define success/failure for each of the above. Then determine the minimial game contents needed to make each specialty meaningful. Preferrably make the specialties interact with each other.

May want to add a time or fuel mechanic. Or both.
May want to add more nimble random enemies in infinite space.

Keep it very simple, like FTL. Simple identifiable agents, like that game with the bat, keys, and dragons where things can just pick up and put down items.

Tentative object list:
	station - type, owerner, location, stock
	agent - faction affiliation, location, owned ships, owned stations
	ship - located at node. has crew (agents) and addons
	ship addons - price and effects on a ship

Each node in a system ought to be a location like:
  low planet orbit
  deep space
  asteroid belt
  near sun
  etc
rather than just disjointed locations that don't make any particular sense in relation to each other.

Make 3 different views possible: ship flight view, system view, local shops view (though maybe this last one is an overlay that pops up when player parks in certain place in flight view.)
Clicking adjacent node in system view shifts player to that location. (Again, it's better to implement this through flight view).

FTL-like game

Distant new worlds difficult to get to.
Exploration ships versus combat ships. Self-sustaining ships versus those that need support stations.
Different alien empires.
Like FTL: lots of distinct simple mechanics. Lots of ways for things to go wrong. Lots of ways to beat an enemy.

Progressive, open world, persistent FTL.
Incremental development. It should always already be a game.
A few simple stats for each object: nodes, characters, ships, addons.
And all actions depend on these stats.
One galaxy. Save with pickle before worrying about mmo.

What if you made it educational?
To teach what? algebra? fractions? what else?
To teach joy of learning and exploring.
Player could angle weapons by hand.
Teach vocabulary. Key terms like: slope, tangent, intercept.
Teach general science knowledge: electrons, neutrons, magnetism, astrophysics.

Lots of resources to maintain and ability to tradeoff between these:
crew
fuel
ammunition
health of the ship
money
** interactive storytelling
Agency and player-guided stories in Urban Dead?
Environment modification and communication.
Track past events to create history and motivation for current actions.

Can I apply such ideas to my game?
How hard would it be to make my game semi-interactive online, in that people can post text messages and modify the environment, but maybe not have dynamic, direct conflicts?

At the very least I could have simple agents like zombies and players, but I think the more vital question is this: how should the environment be modified?

Brainstorm stuff that can happen that the player can care about:
  creation / loss of refueling stations - affects ability to travel
  creation / loss of places to trade stuff
  gain / loss of new weapons - affects freedom
  gain / loss of money
  blockading of warp points - affects ability to travel
  change in hostility level at locations
  fleets moving to different locations
  eventually dramatic changes to the world map. creation / destruction of nodes / links.
  negative minigames (you don't even have a chance to gain anything, just hope to not lose too much) such as attacks by pirates

I think these are actually plenty, you just need/want a better framework in place to make use of them. The factions are still worth doing and you can/should plow ahead with them.

What is the most basic stupid story I could implement:
  An evil faction controls all the nodes connected to the player except the player's own node and the player must defeat the faction one space at a time until it is entirely wiped out to beat the game.
  A few other factions may be scattered in disconnected areas of the world map.
  Make evens bigger but they take longer. That is, instead of randomly pecking at the enemy's strength in one node and randomly boosting the economy of another, the factions (and player) partake in larger projects that take place over the course of many turns but have an immediate and large impact upon completion.
** cargo missions
Factions collect money from owning nodes. Factions have finite resource stockpiles. Factions need resources and money to buy ships and upgrade nodes.
** hide nodes until they are visited
only on the global view should you do this.
Also, eventually have nodes change and make them hidden again.
** damage feedback
Make destructible asteroids spray off a bit of debris, preferably just in the direction away from their centers.
** new minigames
Ship escort - now NPC ships can dodge stuff pretty well. You could escort one to a destination. You should clear asteroids and such out of its way.

Stopping the behemoth - try to kill a moving capital ship before it reaches its destination. Any asteroids the behemoth collides with are destroyed immediately and the behemoth takes some damage.

Race - not just solo, but race other ships.

Capital ship battle - multiple capital ships and other forces duking it out.

MISSIONS
 - chase/shoot down slow torpedoes
 - all out battle with capital ships and fighters
 - stalk/follow/shadow a ship in its blind spot
 - evade pursuit
 - pursue/chase ship through asteroids
 - You could have a particle storm with collidable particles raining across the screen. The player could hide in the shadows of asteroids. Race against time in a particle storm that waxes and wanes.
 - Rally point race against npc's like in the xbox game Rage.
 - Capture the flag.
 - King of the hill.
 - Tag like in Driver: San Francisco. You could slow down the "it" player or give everyone else boost.
 - A Clue-like game with simple info gathering.
 - Survive / pandemic game to clear nodes. Or some other catastrophe to refresh space.
 - You could have an evacuation minigame based on the board game survive. There is a collapsing station and obstacles like enemies moving around and you need to rescue the maximum number of individuals from the station to a nearby ship.
 - Much much later you could implement a missile command minigame.
** beam weapon
Create a beam weapon class in weapon.py.
beam - draws line between player (which tracks player as player moves) and nearest target (this end of the line does not move) and draws little explosions on target. Does damage. long cool down. only activates if target in certain range.
** ship maneuvers
maneuvers:
  strafing
  boost
  brief rapid improvement in turning rate
  immediate reversal of direction
  short forward teleport
  short backward teleport

Booster item that immediately puts ship at max speed.
** cargo brainstorming
Start off with just 6 random goods (I made these up!):
Niblets
Flummox Capacitors
Canny Goods
Reactor Wax
Magnet Grease
Fools Iridium
*** luxury goods
Cheese
Daytime TV shows
Curly Fries
Toothpaste
*** Life Support
Sheep
Gluten-free pasta
Vat-grown Cattle
Multivitamins
First Aid Packs
Clone Organs
Soft Blankets

Food
Medicine
Shelter
Seeds
Water
Grains
Cattle
Spices
Antivirals
Good genes
Organs
First Aid Kits
Pre-fab shelters
*** Construction Material
Injection-molded plastic bricks
Glue
Transparent Force Fields
Shovels

Iron
Rare Earth Elements
Fiber Optics
Construction Equipment
Solar Panels
Architect AIs
Fusion Reactors
*** War Supplies
Combat AIs
Cryptographic Masks
Antimatter Casks
Fractal Armor
Carbon Fiber Sinew
Assorted Diamond Components
Ammunition
*** Technology Materials
Supercomputers
Scientific AIs
Precision Electromagnets
Lab equipment
White lab coats
*** Illicit Goods
Digital worms
Organic Viruses
Uppers
Downers
Mind Control Drugs
Slaves
Self-aware AIs
Singularities
Alien Artifacts
** graphical tweaks
Eventually you could show capital ship damage by simply overlaying damage images over the pristine image of the hull.

muzzle flash from the mouth of some guns
especially on the capital ship.
Maybe make a special big capital ship gun with longer range, bigger, slower projectiles.
** more mechanics
radar ping (expanding circle or sweeping line. can you do expanding arcs or even searchlight style arcs?
cloaking ships
hidden objects
jamming

You could introduce a time freeze mechanic, updating only the player.
** check these out
This page is essentially about hidden experience points of particular types.
http://www.gamasutra.com/view/feature/3485/game_design_essentials_20_.php?page=19
Describes a game that effectively gives the explorer-type player a chance to succeed alongside hack-and-slash-type players.
http://www.gamasutra.com/view/feature/3485/game_design_essentials_20_.php?page=20
** more images
http://spoki.tvnet.lv/upload/articles/17/178957/images/_origin_Olympus-Mons-Olimpa-kalns-2.jpg

http://apod.nasa.gov/apod/ap130406.html

http://i.imgur.com/131f0.jpeg

http://www.nasa.gov/images/content/728004main_8474393768_db89182a7e_o-full_full.jpg

http://apod.nasa.gov/apod/image/1304/iss030e078095.jpg

http://apod.nasa.gov/apod/image/1304/sdo_20130411-M6flare-orig_2048.jpg

http://upload.wikimedia.org/wikipedia/commons/thumb/e/e3/Magnificent_CME_Erupts_on_the_Sun_-_August_31.jpg/1280px-Magnificent_CME_Erupts_on_the_Sun_-_August_31.jpg

http://imgur.com/a/HMDZR

http://i.imgur.com/ngk5yn3h.jpg
** Managing the event subsystem
Control-f for this topic in 
http://pygame.org/docs/tut/newbieguide.html
It may be worth reconsidering how you read inputs later on.
** unm game development club
gdcunm@gmail.com
** stardog
Stardog initially got me started on this project. There might be further things to borrow from it such as screen sizing, how to do sounds, and probably more. See below.

Stardog, by Shanti Pothapragada
rgbdreamer@gmail.com
http://code.google.com/p/stardog


To run stardog, use:
python stardog.py
or
python stardog.py mode x y

where mode is f for fullscreen, w for windowed, at resolution x,y.  Omit x,y for max resolution. 
Stardog requires Python 2.6ish and Pygame.  Stardog will run faster if Psyco is installed.
(This assumes python is in your path variable.)

Controls:

Enter: menu
Tab: radar
Del: self-destruct
wasd/arrows: thrust and turn
q/e: strafe
ctrl: shoot
space: launch missiles
Mouse: move to turn, left click to shoot, right click to thrust

Keys can be changed in the menu. If you want to use the keyboard, you should probably disable mouse control in the keys menu (otherwise your ship will keep turning towards the mouse).

This is still pre-alpha code.  I'm releasing it with hopes of attracting critism and contributers.
If you are interested in contributing to the code, graphics, art, AI, plot, etc., please email me.

This source is given only under the GPL General Public License.  If you are interested in other licensing, please contact me.
* git commands and notes
** changing the repository name
Go to:
https://github.com/nealholt/wild-black-yonder

Click on Settings on the far right side.

Under "Repository Name" you can change the name.

Then locally do
git remote set-url origin git@github.com:nealholt/newname.git
where new name is the new name.

So as to prevent confusion you probably also want to move old name to new name, as in:
cd ..
mv oldname newname

Voila. That should be all.
** all else
https://github.com/nealholt/wild-black-yonder


Get my rsa public key
> emacs ~/.ssh/id_rsa.pub

Go to the website
https://github.com/nealholt/wild-black-yonder/settings/keys
Go to Deploy Key.
Copy the contents of id_rsa.pub into the box and add new key.

Then back on the command line:
> git config --global user.name "nealholt"
> git config --global user.email neal.holts@gmail.com

> cd Desktop/python/
> git clone git@github.com:nealholt/asteroids-buff.git
> cd asteroids-buff/

Then I copied the contents of backup01/ into asteroids-buff/
Then I ran this next line which "Next, tell Git to take a snapshot of the contents of all files under the current directory (note the .), with git add:" according to http://git-scm.com/docs/gittutorial
> git add .
> git commit -m "I'm committing the oldest version of the game."
> git push

I then repeated the 3 previous commands while copying each version of the game from the backups folder to the git repo.

> git add . && git commit -m "I'm committing another version of the game from my backups folder."
> git push


To delete a file locally and from the git repo, use:
> git rm file1.txt
